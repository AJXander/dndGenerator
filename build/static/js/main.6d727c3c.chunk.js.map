{"version":3,"sources":["npcData/tables sync nonrecursive /.json$","Footer.tsx","npcData/utils.ts","npcData/tables.ts","UserInput.tsx","NpcData.tsx","npcData/generate.ts","DisplayNpc.tsx","App.tsx","index.tsx"],"names":["map","./aasimarevilquirk.json","./aasimargoodorevil.json","./aasimargoodquirk.json","./abstractword.json","./age.json","./ageBonus.json","./alignment.json","./aliment.json","./amonster.json","./animaltat.json","./archdevil.json","./atattooadj.json","./attractiveness.json","./badfacemod.json","./badlooking.json","./badsmell.json","./beard.json","./beardlength.json","./beardshape.json","./bodypart.json","./bodypart1.json","./bodypart2.json","./bodyparttat.json","./brand.json","./class.json","./collection.json","./color.json","./contest.json","./degree.json","./degree2.json","./demongod.json","./devilgod.json","./dragonborngender.json","./dragonbornname.json","./dragongod.json","./dragonhair.json","./dragonquirks.json","./dragons.json","./dragonskin.json","./drowgod.json","./drowquirks.json","./dwarfgender.json","./dwarfgod.json","./dwarfquirks.json","./dwarfsurname.json","./elfgender.json","./elfgod.json","./elfquirks.json","./elfskin.json","./elfsurname.json","./entertainer.json","./evilgod.json","./evilworship.json","./extrafinger.json","./eyecolor.json","./face.json","./faceshape.json","./feathertexture.json","./female.json","./femaledwarfname.json","./femaleelfname.json","./femalegnomename1.json","./femalegnomename2.json","./femalegnomename3.json","./femalegnomename4.json","./femalehalflingname.json","./femalehumanname.json","./femaleorcname.json","./femaletritonname.json","./firbolgquirk.json","./firbolgskin.json","./forcealign.json","./frequency.json","./furniture.json","./gender.json","./getevilgod.json","./gnomegender.json","./gnomegod.json","./gnomequirks.json","./goblinname.json","./goliathadj.json","./goliathanimalaction.json","./goliathanimalnoun.json","./goliathcraftaction.json","./goliathcraftnoun.json","./goliathfightingaction.json","./goliathfightingnoun.json","./goliathhair.json","./goliathmysticaction.json","./goliathmysticnoun.json","./goliathname.json","./goliathnoun.json","./goliathquirks.json","./goliathtraits1.json","./goodface.json","./goodfacemod.json","./goodgod.json","./goodlooking.json","./goodorevil.json","./goodsmell.json","./hair.json","./hairColor.json","./hairLength.json","./hairType.json","./halfelfgender.json","./halfelfskin.json","./halflinggender.json","./halflinggod.json","./halflingsurname.json","./halforcgender.json","./halforcskin.json","./halfquirks.json","./head.json","./height.json","./hiCha.json","./hiCon.json","./hiDex.json","./hiInt.json","./hiStr.json","./hiWis.json","./highattractiveness.json","./hooks.json","./hooks1.json","./hooks2.json","./humangender.json","./humangod.json","./humanskin.json","./humansurname.json","./inheritance.json","./kenkucolor.json","./kenkuname.json","./kenkunameanimal.json","./kenkunamefighting.json","./kenkunamemetal.json","./kenkunamequiet.json","./kenkuquirks.json","./kenkuskin.json","./language.json","./learned.json","./lesserNobility.json","./lightweight.json","./lizardcolors.json","./lizardgender.json","./lizardquirks.json","./lizardskin.json","./lizardtraits1.json","./longbeard.json","./longbeard1.json","./lowCha.json","./lowCon.json","./lowDex.json","./lowInt.json","./lowStr.json","./lowWis.json","./male.json","./maledwarfname.json","./maleelfname.json","./malegnomename1.json","./malegnomename2.json","./malegnomename3.json","./malegnomename4.json","./malehalflingname.json","./malehumanname.json","./maleorcname.json","./maletritonname.json","./martial.json","./martialfinesse.json","./martialranged.json","./martialweapon.json","./medCha.json","./medCon.json","./medDex.json","./medInt.json","./medStr.json","./medWis.json","./medusa.json","./medusahair.json","./medusaname.json","./medusaveil.json","./militaryquirk.json","./missingeye.json","./missingfingers.json","./missinglimb.json","./mod.json","./monster.json","./monster1.json","./monster2.json","./mundaneobject.json","./naturequirk.json","./nonhumanskin.json","./normallooking.json","./occupation.json","./orcgender.json","./orcgod.json","./orcskin.json","./orcsurname.json","./organisation.json","./orientation.json","./personality.json","./petanimal.json","./petname.json","./petname1.json","./piercingnumber.json","./poorquirk.json","./precious.json","./preciousitem.json","./profession.json","./professional.json","./quirks.json","./race.json","./raceallergy.json","./racedwarf.json","./raceelf.json","./racegnome.json","./racehalfling.json","./randomquirks.json","./randomtraits1.json","./randomtraits2.json","./relationship.json","./relationshipstatus.json","./religiousquirk.json","./richquirk.json","./rl.json","./rlb.json","./scaletexture.json","./simplefinesse.json","./simpleranged.json","./simpleweapon.json","./size.json","./skin.json","./skinTexture.json","./skinTone.json","./snakecolor.json","./specialphysical.json","./specialphysical1.json","./specialphysical2.json","./strongweight.json","./tabaxifirstname.json","./tabaxilastname.json","./tabaxiname.json","./tabaxinounname.json","./tabaxinumbername.json","./tabaxiobsession.json","./tabaxiquirks.json","./tabaxiskin.json","./tabaxiskincolor.json","./tabaxiskinpattern.json","./tabaxiskintexture.json","./tattoo.json","./tattooadj.json","./tendencies.json","./texttat.json","./tieflingevilname.json","./tieflinggoodname.json","./tieflinggoodorevil.json","./tieflingname.json","./tieflingneutralname.json","./tieflingskin.json","./traits.json","./tritongender.json","./tritonhair.json","./tritonhaircolor.json","./tritonquirks.json","./tritonskin.json","./tritonsurname.json","./underclass.json","./weapon.json","./weight.json","./weirdQuirk.json","./werebeast.json","./whitehair.json","./workClass.json","./worship.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","PageFooter","react_default","a","createElement","className","role","href","target","rel","src","width","height","title","packageJSON","version","Component","debugGen","process","chooseRandomWithWeight","arr","totalWeight","rnum","Math","random","i","w","v","getGroups","val","length","replace","match","g","r","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","operators","Symbol","iterator","next","done","op","value","m","regex","makeOperator","err","return","mapGroup","original","isNumber","n","v1","v2","context","vars","s1","s2","String","text","tablename","options","t","tables","race","chooseOption","alignment","plothook","gender","subrace","classorprof","occupation1","occupation2","index","console","warn","log","require","forEach","key","tableName","name","path","basename","table","row","objectSpread","convertedTable","importTable","getNamedTableOptions","getTableReferenceOptions","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","opt","concat","races","subraces","elf","dwarf","gnome","halfling","genders","alignments","plothooks","classes","professions","professionCategories","learned","lesserNobility","professional","workClass","martial","underclass","entertainer","userOptions","label","optionName","onChange","component","npcOptions","state","setState","condition","UserInput","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","preventDefault","generate","element","document","npc","description","split","join","occupation","elementData","getElementById","file","Blob","textContent","type","URL","createObjectURL","download","body","appendChild","click","removeChild","_this2","userOption","enable","selectedOption","opts","selected","Col","xs","FormGroup","ControlLabel","FormControl","componentClass","parseInt","disabled","Panel","Body","onSubmit","bind","Row","Button","bsStyle","_downloadTxtFile","abilities","NpcData","majP","pronounCapit","quirksArray","pquirks","ptraits","traits1","traitslizards","traitsgoliaths","kenkuname","specialPhysical1","physical","special1","hidden","specialPhysical2","special2","md","Heading","age","hair","eyes","skin","realFeet","feet","floor","toFeet","build","face","religion","traits2","sm","lg","_ref","ability","max","relationship","orientation","status","good","lawful","moralneutral","ethicalneutral","evil","chaotic","hook","numberOrNull","arguments","debugNode","o","childs","processGroups","groups","result","instruction","push","oldNode","node","insRes","Array","isArray","schema","initialisation","processSchema","schemaElement","reduce","chooseFromArray","_arr","_i","output","printDebugGen","depth","lines","indent","repeat","processNode","DisplayNpc","_generate","generateNpc","assertThisInitialized","_generate2","xsOffset","smOffset","mdOffset","UserInput_UserInput","NpcData_NpcData","Footer_PageFooter","App","Grid","DisplayNpc_DisplayNpc","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.6d727c3c.chunk.js","sourcesContent":["var map = {\n\t\"./aasimarevilquirk.json\": 69,\n\t\"./aasimargoodorevil.json\": 70,\n\t\"./aasimargoodquirk.json\": 71,\n\t\"./abstractword.json\": 72,\n\t\"./age.json\": 73,\n\t\"./ageBonus.json\": 74,\n\t\"./alignment.json\": 75,\n\t\"./aliment.json\": 76,\n\t\"./amonster.json\": 77,\n\t\"./animaltat.json\": 78,\n\t\"./archdevil.json\": 79,\n\t\"./atattooadj.json\": 80,\n\t\"./attractiveness.json\": 81,\n\t\"./badfacemod.json\": 82,\n\t\"./badlooking.json\": 83,\n\t\"./badsmell.json\": 84,\n\t\"./beard.json\": 85,\n\t\"./beardlength.json\": 86,\n\t\"./beardshape.json\": 87,\n\t\"./bodypart.json\": 88,\n\t\"./bodypart1.json\": 89,\n\t\"./bodypart2.json\": 90,\n\t\"./bodyparttat.json\": 91,\n\t\"./brand.json\": 92,\n\t\"./class.json\": 93,\n\t\"./collection.json\": 94,\n\t\"./color.json\": 95,\n\t\"./contest.json\": 96,\n\t\"./degree.json\": 97,\n\t\"./degree2.json\": 98,\n\t\"./demongod.json\": 99,\n\t\"./devilgod.json\": 100,\n\t\"./dragonborngender.json\": 101,\n\t\"./dragonbornname.json\": 102,\n\t\"./dragongod.json\": 103,\n\t\"./dragonhair.json\": 104,\n\t\"./dragonquirks.json\": 105,\n\t\"./dragons.json\": 106,\n\t\"./dragonskin.json\": 107,\n\t\"./drowgod.json\": 108,\n\t\"./drowquirks.json\": 109,\n\t\"./dwarfgender.json\": 110,\n\t\"./dwarfgod.json\": 111,\n\t\"./dwarfquirks.json\": 112,\n\t\"./dwarfsurname.json\": 113,\n\t\"./elfgender.json\": 114,\n\t\"./elfgod.json\": 115,\n\t\"./elfquirks.json\": 116,\n\t\"./elfskin.json\": 117,\n\t\"./elfsurname.json\": 118,\n\t\"./entertainer.json\": 119,\n\t\"./evilgod.json\": 120,\n\t\"./evilworship.json\": 121,\n\t\"./extrafinger.json\": 122,\n\t\"./eyecolor.json\": 123,\n\t\"./face.json\": 124,\n\t\"./faceshape.json\": 125,\n\t\"./feathertexture.json\": 126,\n\t\"./female.json\": 127,\n\t\"./femaledwarfname.json\": 128,\n\t\"./femaleelfname.json\": 129,\n\t\"./femalegnomename1.json\": 130,\n\t\"./femalegnomename2.json\": 131,\n\t\"./femalegnomename3.json\": 132,\n\t\"./femalegnomename4.json\": 133,\n\t\"./femalehalflingname.json\": 134,\n\t\"./femalehumanname.json\": 135,\n\t\"./femaleorcname.json\": 136,\n\t\"./femaletritonname.json\": 137,\n\t\"./firbolgquirk.json\": 138,\n\t\"./firbolgskin.json\": 139,\n\t\"./forcealign.json\": 140,\n\t\"./frequency.json\": 141,\n\t\"./furniture.json\": 142,\n\t\"./gender.json\": 143,\n\t\"./getevilgod.json\": 144,\n\t\"./gnomegender.json\": 145,\n\t\"./gnomegod.json\": 146,\n\t\"./gnomequirks.json\": 147,\n\t\"./goblinname.json\": 148,\n\t\"./goliathadj.json\": 149,\n\t\"./goliathanimalaction.json\": 150,\n\t\"./goliathanimalnoun.json\": 151,\n\t\"./goliathcraftaction.json\": 152,\n\t\"./goliathcraftnoun.json\": 153,\n\t\"./goliathfightingaction.json\": 154,\n\t\"./goliathfightingnoun.json\": 155,\n\t\"./goliathhair.json\": 156,\n\t\"./goliathmysticaction.json\": 157,\n\t\"./goliathmysticnoun.json\": 158,\n\t\"./goliathname.json\": 159,\n\t\"./goliathnoun.json\": 160,\n\t\"./goliathquirks.json\": 161,\n\t\"./goliathtraits1.json\": 162,\n\t\"./goodface.json\": 163,\n\t\"./goodfacemod.json\": 164,\n\t\"./goodgod.json\": 165,\n\t\"./goodlooking.json\": 166,\n\t\"./goodorevil.json\": 167,\n\t\"./goodsmell.json\": 168,\n\t\"./hair.json\": 169,\n\t\"./hairColor.json\": 170,\n\t\"./hairLength.json\": 171,\n\t\"./hairType.json\": 172,\n\t\"./halfelfgender.json\": 173,\n\t\"./halfelfskin.json\": 174,\n\t\"./halflinggender.json\": 175,\n\t\"./halflinggod.json\": 176,\n\t\"./halflingsurname.json\": 177,\n\t\"./halforcgender.json\": 178,\n\t\"./halforcskin.json\": 179,\n\t\"./halfquirks.json\": 180,\n\t\"./head.json\": 181,\n\t\"./height.json\": 182,\n\t\"./hiCha.json\": 183,\n\t\"./hiCon.json\": 184,\n\t\"./hiDex.json\": 185,\n\t\"./hiInt.json\": 186,\n\t\"./hiStr.json\": 187,\n\t\"./hiWis.json\": 188,\n\t\"./highattractiveness.json\": 189,\n\t\"./hooks.json\": 190,\n\t\"./hooks1.json\": 191,\n\t\"./hooks2.json\": 192,\n\t\"./humangender.json\": 193,\n\t\"./humangod.json\": 194,\n\t\"./humanskin.json\": 195,\n\t\"./humansurname.json\": 196,\n\t\"./inheritance.json\": 197,\n\t\"./kenkucolor.json\": 198,\n\t\"./kenkuname.json\": 199,\n\t\"./kenkunameanimal.json\": 200,\n\t\"./kenkunamefighting.json\": 201,\n\t\"./kenkunamemetal.json\": 202,\n\t\"./kenkunamequiet.json\": 203,\n\t\"./kenkuquirks.json\": 204,\n\t\"./kenkuskin.json\": 205,\n\t\"./language.json\": 206,\n\t\"./learned.json\": 207,\n\t\"./lesserNobility.json\": 208,\n\t\"./lightweight.json\": 209,\n\t\"./lizardcolors.json\": 210,\n\t\"./lizardgender.json\": 211,\n\t\"./lizardquirks.json\": 212,\n\t\"./lizardskin.json\": 213,\n\t\"./lizardtraits1.json\": 214,\n\t\"./longbeard.json\": 215,\n\t\"./longbeard1.json\": 216,\n\t\"./lowCha.json\": 217,\n\t\"./lowCon.json\": 218,\n\t\"./lowDex.json\": 219,\n\t\"./lowInt.json\": 220,\n\t\"./lowStr.json\": 221,\n\t\"./lowWis.json\": 222,\n\t\"./male.json\": 223,\n\t\"./maledwarfname.json\": 224,\n\t\"./maleelfname.json\": 225,\n\t\"./malegnomename1.json\": 226,\n\t\"./malegnomename2.json\": 227,\n\t\"./malegnomename3.json\": 228,\n\t\"./malegnomename4.json\": 229,\n\t\"./malehalflingname.json\": 230,\n\t\"./malehumanname.json\": 231,\n\t\"./maleorcname.json\": 232,\n\t\"./maletritonname.json\": 233,\n\t\"./martial.json\": 234,\n\t\"./martialfinesse.json\": 235,\n\t\"./martialranged.json\": 236,\n\t\"./martialweapon.json\": 237,\n\t\"./medCha.json\": 238,\n\t\"./medCon.json\": 239,\n\t\"./medDex.json\": 240,\n\t\"./medInt.json\": 241,\n\t\"./medStr.json\": 242,\n\t\"./medWis.json\": 243,\n\t\"./medusa.json\": 244,\n\t\"./medusahair.json\": 245,\n\t\"./medusaname.json\": 246,\n\t\"./medusaveil.json\": 247,\n\t\"./militaryquirk.json\": 248,\n\t\"./missingeye.json\": 249,\n\t\"./missingfingers.json\": 250,\n\t\"./missinglimb.json\": 251,\n\t\"./mod.json\": 252,\n\t\"./monster.json\": 253,\n\t\"./monster1.json\": 254,\n\t\"./monster2.json\": 255,\n\t\"./mundaneobject.json\": 256,\n\t\"./naturequirk.json\": 257,\n\t\"./nonhumanskin.json\": 258,\n\t\"./normallooking.json\": 259,\n\t\"./occupation.json\": 260,\n\t\"./orcgender.json\": 261,\n\t\"./orcgod.json\": 262,\n\t\"./orcskin.json\": 263,\n\t\"./orcsurname.json\": 264,\n\t\"./organisation.json\": 265,\n\t\"./orientation.json\": 266,\n\t\"./personality.json\": 267,\n\t\"./petanimal.json\": 268,\n\t\"./petname.json\": 269,\n\t\"./petname1.json\": 270,\n\t\"./piercingnumber.json\": 271,\n\t\"./poorquirk.json\": 272,\n\t\"./precious.json\": 273,\n\t\"./preciousitem.json\": 274,\n\t\"./profession.json\": 275,\n\t\"./professional.json\": 276,\n\t\"./quirks.json\": 277,\n\t\"./race.json\": 278,\n\t\"./raceallergy.json\": 279,\n\t\"./racedwarf.json\": 280,\n\t\"./raceelf.json\": 281,\n\t\"./racegnome.json\": 282,\n\t\"./racehalfling.json\": 283,\n\t\"./randomquirks.json\": 284,\n\t\"./randomtraits1.json\": 285,\n\t\"./randomtraits2.json\": 286,\n\t\"./relationship.json\": 287,\n\t\"./relationshipstatus.json\": 288,\n\t\"./religiousquirk.json\": 289,\n\t\"./richquirk.json\": 290,\n\t\"./rl.json\": 291,\n\t\"./rlb.json\": 292,\n\t\"./scaletexture.json\": 293,\n\t\"./simplefinesse.json\": 294,\n\t\"./simpleranged.json\": 295,\n\t\"./simpleweapon.json\": 296,\n\t\"./size.json\": 297,\n\t\"./skin.json\": 298,\n\t\"./skinTexture.json\": 299,\n\t\"./skinTone.json\": 300,\n\t\"./snakecolor.json\": 301,\n\t\"./specialphysical.json\": 302,\n\t\"./specialphysical1.json\": 303,\n\t\"./specialphysical2.json\": 304,\n\t\"./strongweight.json\": 305,\n\t\"./tabaxifirstname.json\": 306,\n\t\"./tabaxilastname.json\": 307,\n\t\"./tabaxiname.json\": 308,\n\t\"./tabaxinounname.json\": 309,\n\t\"./tabaxinumbername.json\": 310,\n\t\"./tabaxiobsession.json\": 311,\n\t\"./tabaxiquirks.json\": 312,\n\t\"./tabaxiskin.json\": 313,\n\t\"./tabaxiskincolor.json\": 314,\n\t\"./tabaxiskinpattern.json\": 315,\n\t\"./tabaxiskintexture.json\": 316,\n\t\"./tattoo.json\": 317,\n\t\"./tattooadj.json\": 318,\n\t\"./tendencies.json\": 319,\n\t\"./texttat.json\": 320,\n\t\"./tieflingevilname.json\": 321,\n\t\"./tieflinggoodname.json\": 322,\n\t\"./tieflinggoodorevil.json\": 323,\n\t\"./tieflingname.json\": 324,\n\t\"./tieflingneutralname.json\": 325,\n\t\"./tieflingskin.json\": 326,\n\t\"./traits.json\": 327,\n\t\"./tritongender.json\": 328,\n\t\"./tritonhair.json\": 329,\n\t\"./tritonhaircolor.json\": 330,\n\t\"./tritonquirks.json\": 331,\n\t\"./tritonskin.json\": 332,\n\t\"./tritonsurname.json\": 333,\n\t\"./underclass.json\": 334,\n\t\"./weapon.json\": 335,\n\t\"./weight.json\": 336,\n\t\"./weirdQuirk.json\": 337,\n\t\"./werebeast.json\": 338,\n\t\"./whitehair.json\": 339,\n\t\"./workClass.json\": 340,\n\t\"./worship.json\": 341\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","// Code taken from https://github.com/react-bootstrap/react-bootstrap/tree/master/docs\r\nimport React, { Component } from \"react\";\r\nimport packageJSON from \"../package.json\";\r\n\r\nimport \"./Footer.less\";\r\n\r\nexport default class PageFooter extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"bs-docs-footer\" role=\"contentinfo\">\r\n        <ul className=\"bs-docs-social-buttons\">\r\n          <li>\r\n            <div>\r\n              <p className=\"footer-outline\"><b>Check out my video game!</b></p>\r\n              <a href=\"http://store.steampowered.com/app/769410/Electromaze_Tower_Defense/\" target=\"_blank\" rel=\"noopener noreferrer\"><div className=\"center-block EMD-button\" /></a>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div>\r\n              <p className=\"footer-outline\"><b>Follow my next RPG on discord!</b></p>\r\n              <a href=\"https://discord.gg/VVb6hDr\" target=\"_blank\" rel=\"noopener noreferrer\"><div className=\"center-block GM-button\" /></a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div>\r\n          <p className=\"footer-outline\"><b> Comments, suggestions, crazy hook or trait idea? </b></p>\r\n          <p> Email me at: <a href=\"mailto:etienspb@gmail.com\">EtiensPB@gmail.com</a>!</p>\r\n        </div>\r\n        <div className=\"bs-docs-social\">\r\n          <ul className=\"bs-docs-social-buttons\">\r\n            <li>\r\n              <iframe className=\"github-btn\"\r\n                src=\"https://ghbtns.com/github-btn.html?user=cellule&repo=dndGenerator&type=watch&count=true\"\r\n                width={95}\r\n                height={20}\r\n                title=\"Star on GitHub\" />\r\n            </li>\r\n            <li>\r\n              <iframe className=\"github-btn\"\r\n                src=\"https://ghbtns.com/github-btn.html?user=cellule&repo=dndGenerator&type=fork&count=true\"\r\n                width={92}\r\n                height={20}\r\n                title=\"Fork on GitHub\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <p>Code licensed under <a href=\"https://github.com/cellule/dndGenerator/blob/master/LICENSE\" target=\"_blank\" rel=\"noopener noreferrer\">MIT</a>.</p>\r\n        <ul className=\"bs-docs-footer-links muted\">\r\n          <li>Currently v{packageJSON.version}</li>\r\n          <li>·</li>\r\n          <li><a href=\"https://github.com/cellule/dndGenerator/\">GitHub</a></li>\r\n          <li>·</li>\r\n          <li><a href=\"https://github.com/cellule/dndGenerator/issues?state=open\">Issues</a></li>\r\n          <li>·</li>\r\n          <li><a href=\"https://github.com/cellule/dndGenerator/releases\">Releases</a></li>\r\n        </ul>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\n","import { Group, Operator } from \"./index\";\r\nimport tables from \"./tables\";\r\nexport const debugGen = process.env.NODE_ENV === \"development\";\r\n\r\nexport function chooseRandomWithWeight<T>(arr: {\r\n  w: number;\r\n  v: T\r\n}[], totalWeight: number): T {\r\n  let rnum = ((Math.random() * totalWeight) + 1) | 0;\r\n  let i = 0;\r\n  while (rnum > 0) {\r\n    rnum -= arr[i++].w;\r\n  }\r\n  return arr[i - 1].v;\r\n}\r\n\r\nfunction mapGroup(g: string): Group {\r\n  //todo: replace escaped \\{ and \\}\r\n  if (g[0] === \"{\") {\r\n    for (const op of operators) {\r\n      const m = g.match(op.regex);\r\n      if (m) {\r\n        return op.makeOperator(m);\r\n      }\r\n    }\r\n    return () => { };\r\n  }\r\n  return g;\r\n}\r\n\r\n\r\nexport function getGroups(val: string): Group[] {\r\n  if (typeof val !== \"string\" || val.length === 0) {\r\n    throw new Error(\"Empty value to get group\");\r\n  }\r\n  val = val.replace(\"{\\\\n}\", \"\\n\");\r\n  const r = (val.match(/{((\\\\{|\\\\}|[^{}])*)}|((\\\\{|\\\\}|[^{}])+)/g) || [])\r\n    .map(g => {\r\n      const r = mapGroup(g);\r\n      if (debugGen && typeof r !== \"string\") {\r\n        r.original = g;\r\n      }\r\n      return r;\r\n    });\r\n  return r;\r\n}\r\n\r\nfunction isNumber(n: any): n is number {\r\n  return typeof n === \"number\";\r\n}\r\n\r\n/*\r\nAll supported operations\r\n{%v1=%v2} : v1 = v2\r\n{%v1=15} : v1 = 15\r\n{%v1+%v2} : v1 = v1 + v2\r\n{%v1+15} : v1 = v1 + 15\r\n{%v1-%v2} : v1 = v1 - v2\r\n{%v1-15} : v1 = v1 - 15\r\n{%v1} : output v1\r\n{$s1=$s2} : s1 = s2\r\n{$s1=du text lala.} : s1 = txt\r\n{$s1+$s2} : s1 = s1 + s2\r\n{$s1+du text lala.} : s1 = s1 + txt\r\n{$s1} : output s1\r\n{\\n} : output an endline\r\n{table} : replace by table element\r\n*/\r\nconst operators: {\r\n  regex: RegExp,\r\n  makeOperator: (m: RegExpMatchArray) => Operator,\r\n}[] = [\r\n    // {%v1=%v2}\r\n    {\r\n      regex: /^{%(.+)=%(.*)}/, makeOperator(m) {\r\n        const v1 = m[1], v2 = m[2];\r\n        return function operator(context) {\r\n          context.vars[v1] = +context.vars[v2];\r\n        };\r\n      }\r\n    },\r\n    // {%v1=15}\r\n    {\r\n      regex: /^{%(.+)=(.*)}/, makeOperator(m) {\r\n        const v1 = m[1], value = +m[2];\r\n        return function operator(context) {\r\n          context.vars[v1] = value;\r\n        };\r\n      }\r\n    },\r\n    // {%v1+%v2}\r\n    {\r\n      regex: /^{%(.+)\\+%(.*)}/, makeOperator(m) {\r\n        const v1 = m[1], v2 = m[2];\r\n        return function operator(context) {\r\n          context.vars[v1] = (+context.vars[v1]) + (+context.vars[v2]);\r\n        };\r\n      }\r\n    },\r\n    // {%v1+15}\r\n    {\r\n      regex: /^{%(.+)\\+(.*)}/, makeOperator(m) {\r\n        const v1 = m[1], value = +m[2];\r\n        return function operator(context) {\r\n          context.vars[v1] = (+context.vars[v1]) + value;\r\n        };\r\n      }\r\n    },\r\n    // {%v1-%v2}\r\n    {\r\n      regex: /^{%(.+)-%(.*)}/, makeOperator(m) {\r\n        const v1 = m[1], v2 = m[2];\r\n        return function operator(context) {\r\n          context.vars[v1] = (+context.vars[v1]) - (+context.vars[v2]);\r\n        };\r\n      }\r\n    },\r\n    // {%v1-15}\r\n    {\r\n      regex: /^{%(.+)-(.*)}/, makeOperator(m) {\r\n        const v1 = m[1], value = +m[2];\r\n        return function operator(context) {\r\n          context.vars[v1] = (+context.vars[v1]) - value;\r\n        };\r\n      }\r\n    },\r\n    // {%v1}\r\n    {\r\n      regex: /^{%(.+)}/, makeOperator(m) {\r\n        const v1 = m[1];\r\n        return function operator(context) {\r\n          return (+context.vars[v1]) | 0;\r\n        };\r\n      }\r\n    },\r\n    // {$s1=$s2}\r\n    {\r\n      regex: /^{\\$(.+)=\\$(.*)}/, makeOperator(m) {\r\n        const s1 = m[1], s2 = m[2];\r\n        return function operator(context) {\r\n          context.vars[s1] = String(context.vars[s2]);\r\n        };\r\n      }\r\n    },\r\n    // {$s1=du text lala.}\r\n    {\r\n      regex: /^{\\$(.+)=(.*)}/, makeOperator(m) {\r\n        const s1 = m[1], text = m[2];\r\n        return function operator(context) {\r\n          context.vars[s1] = text;\r\n        };\r\n      }\r\n    },\r\n    // {$s1+$s2}\r\n    {\r\n      regex: /^{\\$(.+)\\+\\$(.*)}/, makeOperator(m) {\r\n        const s1 = m[1], s2 = m[2];\r\n        return function operator(context) {\r\n          context.vars[s1] += String(context.vars[s2]);\r\n        };\r\n      }\r\n    },\r\n    // {$s1+du text lala.}\r\n    {\r\n      regex: /^{\\$(.+)\\+(.*)}/, makeOperator(m) {\r\n        const s1 = m[1], text = m[2];\r\n        return function operator(context) {\r\n          context.vars[s1] += text;\r\n        };\r\n      }\r\n    },\r\n    // {$s1}\r\n    {\r\n      regex: /^{\\$(.+)}/, makeOperator(m) {\r\n        const s1 = m[1];\r\n        return function operator(context) {\r\n          return context.vars[s1];\r\n        };\r\n      }\r\n    },\r\n    {\r\n      regex: /^{\\\\n}$/, makeOperator() {\r\n        return function operator() {\r\n          return \"\\n\";\r\n        };\r\n      }\r\n    },\r\n    // {table}\r\n    {\r\n      regex: /^{(.*)}/, makeOperator(m) {\r\n        const tablename = m[1];\r\n        return function operator(context, options) {\r\n          const t = tables[tablename];\r\n          if (!t) {\r\n            console.log(\"Unable to find table [%s]\", tablename);\r\n            return undefined;\r\n          }\r\n\r\n          function chooseOption(index: number) {\r\n            if ((index >>> 0) >= t.options.length) {\r\n              console.warn(\"Index [%d] for table [%s]\", index, tablename);\r\n              return chooseRandomWithWeight(t.options, t.w);\r\n            }\r\n            /*if(__DEV__) {\r\n              console.log(\r\n                \"Table [%s] option forced to [%s]\",\r\n                tablename,\r\n                t.options[index].original\r\n              );\r\n            }*/\r\n            return t.options[index].v;\r\n          }\r\n\r\n          if (tablename === \"race\" && isNumber(options.race)) {\r\n            return chooseOption(options.race);\r\n          } else if (tablename === \"forcealign\" && isNumber(options.alignment)) {\r\n            return chooseOption(options.alignment);\r\n          } else if (tablename === \"hooks\" && isNumber(options.plothook)) {\r\n            return chooseOption(options.plothook);\r\n          } else if (tablename.match(/gender$/) && isNumber(options.gender)) {\r\n            return chooseOption(options.gender);\r\n          }\r\n          if (isNumber(options.subrace) &&\r\n            (\r\n              tablename === \"raceelf\" ||\r\n              tablename === \"racedwarf\" ||\r\n              tablename === \"racegnome\" ||\r\n              tablename === \"racehalfling\" ||\r\n              tablename === \"racegenasi\"\r\n            )\r\n          ) {\r\n            return chooseOption(options.subrace);\r\n          }\r\n\r\n          if (isNumber(options.classorprof)) {\r\n            if (tablename === \"occupation\") {\r\n              return chooseOption(options.classorprof);\r\n            } else if (\r\n              isNumber(options.occupation1) &&\r\n              options.classorprof === 0 &&\r\n              tablename === \"class\"\r\n            ) {\r\n              return chooseOption(options.occupation1);\r\n            } else if (\r\n              isNumber(options.occupation1) &&\r\n              options.classorprof === 1 &&\r\n              tablename === \"profession\"\r\n            ) {\r\n              return chooseOption(options.occupation1);\r\n            } else if (\r\n              isNumber(options.occupation1) &&\r\n              isNumber(options.occupation2) &&\r\n              options.classorprof === 1 &&\r\n              (\r\n                tablename === \"learned\" ||\r\n                tablename === \"lesserNobility\" ||\r\n                tablename === \"professional\" ||\r\n                tablename === \"workClass\" ||\r\n                tablename === \"martial\" ||\r\n                tablename === \"underclass\" ||\r\n                tablename === \"entertainer\"\r\n              )\r\n            ) {\r\n              return chooseOption(options.occupation2);\r\n            }\r\n          }\r\n          return chooseRandomWithWeight(t.options, t.w);\r\n        };\r\n      }\r\n    }\r\n  ];\r\n","import { Option, WeightedValue } from \"./index\";\r\nimport { getGroups } from \"./utils\";\r\nimport path from \"path\";\r\n\r\ninterface TableEntry {\r\n  w: number,\r\n  options: Option[]\r\n}\r\n\r\ninterface Tables {\r\n  [name: string]: TableEntry\r\n}\r\nconst tables = {} as Tables;\r\n\r\nfunction importTable(tableName: string, r: (id: string) => any) {\r\n  const name = path.basename(tableName, \".json\");\r\n  const table: WeightedValue[] = r(tableName);\r\n  let totalWeight = 0;\r\n  const options = table.map(row => {\r\n    const w = row.w > 0 ? row.w : 0;\r\n    totalWeight += w;\r\n    return {\r\n      ...row,\r\n      w,\r\n      v: getGroups(row.v) || [],\r\n      original: row.v\r\n    }\r\n  });\r\n  var convertedTable = { w: totalWeight, options };\r\n  tables[name] = convertedTable;\r\n}\r\n\r\nif (process.env.NODE_ENV === \"test\") {\r\n  const fs = require(\"fs\");\r\n  const dir = path.join(__dirname, \"./tables\");\r\n  const dirContent = fs.readdirSync(dir);\r\n  for (const table of dirContent) {\r\n    // eslint-disable-next-line\r\n    importTable(table, t => require(path.join(dir, t)));\r\n  }\r\n} else {\r\n  const r = require.context('./tables/', false, /\\.json$/);\r\n  r.keys().forEach((key: string) => {\r\n    importTable(key, r);\r\n  });\r\n}\r\n\r\nexport default tables;\r\n\r\nexport interface NamedOption extends Option {\r\n  name?: string;\r\n}\r\nexport interface TableReferenceOption extends NamedOption {\r\n  table: string;\r\n}\r\n\r\nexport function getNamedTableOptions(tablename: string): NamedOption[] {\r\n  const options = tables[tablename].options;\r\n  return options as NamedOption[];\r\n}\r\n\r\nexport function getTableReferenceOptions(tablename: keyof Tables): TableReferenceOption[] {\r\n  const options = tables[tablename].options as any;\r\n  for (const opt of options) {\r\n    if (!(\"table\" in opt)) {\r\n      throw new Error(`Missing \"table\" property in table ${tablename} option ${opt.original}`);\r\n    }\r\n  }\r\n  return options as TableReferenceOption[];\r\n}\r\n\r\nexport function getTableOptions(tablename: string) {\r\n  return tables[tablename].options;\r\n}","import {\r\n  Panel,\r\n  Col,\r\n  Row,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { NamedOption, getNamedTableOptions, getTableReferenceOptions } from \"./npcData/tables\";\r\nimport { NpcGenerateOptions, Npc } from \"./npcData/index\";\r\n\r\nconst races = getTableReferenceOptions(\"race\");\r\n\r\nconst subraces: { [race: string]: NamedOption[] } = {\r\n  elf: getNamedTableOptions(\"raceelf\"),\r\n  dwarf: getNamedTableOptions(\"racedwarf\"),\r\n  gnome: getNamedTableOptions(\"racegnome\"),\r\n  halfling: getNamedTableOptions(\"racehalfling\"),\r\n}\r\n\r\nconst genders = getNamedTableOptions(\"gender\");\r\nconst alignments = getNamedTableOptions(\"forcealign\");\r\nconst plothooks = getNamedTableOptions(\"hooks\");\r\nconst classes = getNamedTableOptions(\"class\");\r\nconst professions = getTableReferenceOptions(\"profession\");\r\n\r\nconst professionCategories: { [prof: string]: NamedOption[] } = {\r\n  learned: getNamedTableOptions(\"learned\"),\r\n  lesserNobility: getNamedTableOptions(\"lesserNobility\"),\r\n  professional: getNamedTableOptions(\"professional\"),\r\n  workClass: getNamedTableOptions(\"workClass\"),\r\n  martial: getNamedTableOptions(\"martial\"),\r\n  underclass: getNamedTableOptions(\"underclass\"),\r\n  entertainer: getNamedTableOptions(\"entertainer\"),\r\n};\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  for (const prof of professions) {\r\n    if (!professionCategories[prof.table]) {\r\n      throw new Error(`Missing profession category \"${prof.table}\"`);\r\n    }\r\n  }\r\n}\r\n\r\ninterface IProps {\r\n  npc: Npc;\r\n  generate: (options: NpcGenerateOptions) => void;\r\n};\r\n\r\ninterface IState {\r\n  npcOptions: NpcGenerateOptions\r\n};\r\n\r\nconst userOptions: {\r\n  label: string;\r\n  optionName: keyof NpcGenerateOptions;\r\n  options: { name?: string }[] | ((npcOptions: NpcGenerateOptions) => { name?: string }[]),\r\n  condition?: (npcOptions: NpcGenerateOptions) => boolean,\r\n  onChange?: (component: Component<IProps, IState>) => void;\r\n}[] = [\r\n    {\r\n      label: \"Race\",\r\n      optionName: \"race\",\r\n      options: races,\r\n      onChange: (component) => {\r\n        const npcOptions = component.state.npcOptions;\r\n        npcOptions.subrace = null;\r\n        component.setState({ npcOptions });\r\n      }\r\n    },\r\n    {\r\n      label: \"Subrace\",\r\n      optionName: \"subrace\",\r\n      condition: (npcOptions) => (typeof npcOptions.race === \"number\" && subraces[races[npcOptions.race].table] !== undefined),\r\n      options: (npcOptions) => subraces[races[npcOptions.race || 0].table]\r\n    },\r\n    {\r\n      label: \"Sex\",\r\n      optionName: \"gender\",\r\n      options: genders\r\n    },\r\n    {\r\n      label: \"Alignment\",\r\n      optionName: \"alignment\",\r\n      options: alignments\r\n    },\r\n    {\r\n      label: \"Plot Hooks\",\r\n      optionName: \"plothook\",\r\n      options: plothooks\r\n    },\r\n    {\r\n      label: \"Occupation\",\r\n      optionName: \"classorprof\",\r\n      options: [{ name: \"Class\" }, { name: \"Profession\" }],\r\n      onChange: (component) => {\r\n        const npcOptions = component.state.npcOptions;\r\n        npcOptions.occupation1 = null;\r\n        npcOptions.occupation2 = null;\r\n        component.setState({ npcOptions });\r\n      }\r\n    },\r\n    {\r\n      label: \"Class\",\r\n      optionName: \"occupation1\",\r\n      condition: (npcOptions) => npcOptions.classorprof === 0,\r\n      options: classes\r\n    },\r\n    {\r\n      label: \"Social Class\",\r\n      optionName: \"occupation1\",\r\n      condition: (npcOptions) => npcOptions.classorprof === 1,\r\n      options: professions,\r\n      onChange: (component) => {\r\n        const npcOptions = component.state.npcOptions;\r\n        npcOptions.occupation2 = null;\r\n        component.setState({ npcOptions });\r\n      }\r\n    },\r\n    {\r\n      label: \"Profession\",\r\n      optionName: \"occupation2\",\r\n      condition: (npcOptions) => (npcOptions.classorprof === 1 && typeof npcOptions.occupation1 === \"number\"),\r\n      options: (npcOptions) => professionCategories[professions[npcOptions.occupation1 || 0].table]\r\n    },\r\n  ];\r\n\r\nexport default class UserInput extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      npcOptions: {}\r\n    };\r\n  }\r\n\r\n  onSubmit(e: any) {\r\n    e.preventDefault();\r\n    this.props.generate(this.state.npcOptions);\r\n  }\r\n\r\n  _downloadTxtFile() {\r\n    const element = document.createElement(\"a\");\r\n    const name = this.props.npc.description.name.split(\" \")[0];\r\n    const gender = this.props.npc.description.gender;\r\n    const race = this.props.npc.description.race.split(\" \").join(\"_\");\r\n    const occupation = this.props.npc.description.occupation.split(\" \").join(\"_\");\r\n    const elementData = document.getElementById(\"downloadData\");\r\n    if (!elementData) {\r\n      throw new Error(\"Missing element downloadData\");\r\n    }\r\n    const file = new Blob([(elementData.textContent || \"\").split(\"#\").join(\"\\r\\n\").split(\"#\").join(\"\\r\\n\")], { type: 'text/plain' });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = name + \"_\" + gender + \"_\" + race + \"_\" + occupation + \".txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const npcOptions = userOptions.map(userOption => {\r\n      const enable = !(\r\n        userOption.condition &&\r\n        !userOption.condition(this.state.npcOptions)\r\n      );\r\n\r\n      if (userOption.condition && !userOption.condition(this.state.npcOptions)) {\r\n        // Comment this if you want the disabled option\r\n        return null;\r\n      }\r\n\r\n      let options: any = [];\r\n      const selectedOption = this.state.npcOptions[userOption.optionName];\r\n      if (enable) {\r\n        let opts = userOption.options;\r\n        if (typeof opts === \"function\") {\r\n          opts = opts(this.state.npcOptions);\r\n        }\r\n        options = opts.map((opt, i) => {\r\n          if (!opt.name) {\r\n            return null;\r\n          }\r\n          return <option value={i} key={i} selected={selectedOption === i}>{opt.name}</option>;\r\n        });\r\n      }\r\n\r\n      return (\r\n        <Col xs={12} key={userOption.label}>\r\n          <FormGroup>\r\n            <ControlLabel>{userOption.label}</ControlLabel>\r\n            <FormControl componentClass=\"select\"\r\n              onChange={\r\n                (e: any) => {\r\n                  const npcOptions = this.state.npcOptions;\r\n                  npcOptions[userOption.optionName] = e.target.value === \"random\" ? null : parseInt(e.target.value);\r\n                  this.setState({ npcOptions }, () => {\r\n                    if (userOption.onChange) {\r\n                      userOption.onChange(this);\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n              disabled={!enable}\r\n            >\r\n              <option value=\"random\" key=\"random\">Random</option>\r\n              {options}\r\n            </FormControl>\r\n          </FormGroup>\r\n        </Col>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Panel className=\"hidden-panel\">\r\n          <Panel.Body>\r\n            <form onSubmit={this.onSubmit.bind(this)}>\r\n              <Row>\r\n                {npcOptions}\r\n              </Row>\r\n              <Button type=\"submit\" className=\"center-block generate-button\" bsStyle=\"success\" />\r\n            </form>\r\n\r\n            <form onSubmit={this._downloadTxtFile.bind(this)}>\r\n              <Button type=\"submit\" className=\"center-block download-button download-button\" bsStyle=\"success\" />\r\n            </form>\r\n          </Panel.Body>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Panel, Row, Col } from \"react-bootstrap\";\r\nimport { Npc, NpcAbilities } from \"./npcData/index\";\r\nimport \"./NpcData.less\";\r\n\r\nconst abilities: { key: keyof NpcAbilities, name: string; }[] = [\r\n  { key: \"str\", name: \"Strength\" },\r\n  { key: \"dex\", name: \"Dexterity\" },\r\n  { key: \"con\", name: \"Constitution\" },\r\n  { key: \"int\", name: \"Intellect\" },\r\n  { key: \"wis\", name: \"Wisdom\" },\r\n  { key: \"cha\", name: \"Charisma\" },\r\n];\r\n\r\nfunction toFeet(n: number) {\r\n  const realFeet = ((n * 0.393700) / 12);\r\n  const feet = Math.floor(realFeet);\r\n  const inches = Math.floor((realFeet - feet) * 12);\r\n  return feet + \"'\" + inches + '\"';\r\n}\r\n\r\ninterface IProps {\r\n  npc: Npc | null\r\n}\r\n\r\nexport default class NpcData extends Component<IProps> {\r\n  render() {\r\n    const { npc } = this.props;\r\n    if (!npc) {\r\n      return <div>Loading npc...</div>;\r\n    }\r\n\r\n    const majP = npc.description.pronounCapit;\r\n    //const minP = npc.description.pronounMinus;\r\n    const quirksArray = npc.pquirks.description.split(\".\");\r\n    quirksArray.length--;\r\n\r\n    if (npc.description.race === \"lizardman\" || npc.description.race === \"lizardwoman\") {\r\n      npc.ptraits.traits1 = npc.ptraits.traitslizards;\r\n    }\r\n    if (npc.description.race === \"goliath\") {\r\n      npc.ptraits.traits1 = npc.ptraits.traitsgoliaths;\r\n    }\r\n    if (npc.description.race === \"kenku\") {\r\n      npc.description.name = npc.description.kenkuname;\r\n    }\r\n\r\n    const specialPhysical1 = npc.physical.special1 !== \"\"\r\n      ? <div><p hidden>#</p><p>{npc.physical.special1}</p></div>\r\n      : null;\r\n    const specialPhysical2 = npc.physical.special2 !== \"\"\r\n      ? <div><p hidden>#</p><p>{npc.physical.special2}</p></div>\r\n      : null;\r\n\r\n    return (\r\n      <div className=\"npc-data\" id=\"downloadData\">\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <Panel className=\"first-row-height\">\r\n              <Panel.Heading>Description</Panel.Heading>\r\n              <Panel.Body>\r\n                <p hidden>#</p>\r\n                <p>\r\n                  {npc.description.name} is a {npc.description.age + \" \"}\r\n                  years old {npc.description.gender} {npc.description.race + \" \"}\r\n                  {npc.description.occupation}.\r\n              </p>\r\n                <p hidden>#</p>\r\n                <p>\r\n                  {majP}has {npc.physical.hair}{npc.physical.eyes}.\r\n              </p>\r\n                <p hidden>#</p>\r\n                <p>\r\n                  {majP}has {npc.physical.skin}.\r\n              </p>\r\n                <p hidden>#</p>\r\n                <p>\r\n                  {majP}stands {npc.physical.height}cm ({toFeet(npc.physical.height)}) tall and has {npc.physical.build}.\r\n              </p>\r\n                <p hidden>#</p>\r\n                <p>\r\n                  {majP}has {npc.physical.face}.\r\n              </p>\r\n                <p hidden>#</p>\r\n                {specialPhysical1}\r\n                {specialPhysical2}\r\n                <p hidden>#</p>\r\n                <p hidden>#</p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <Panel className=\"first-row-height\">\r\n              <Panel.Heading>Personality Traits</Panel.Heading>\r\n              <Panel.Body>\r\n                <p hidden>#</p>\r\n                <p>\r\n                  {npc.religion.description}\r\n                </p>\r\n                <p hidden>#</p>\r\n                <p>{npc.ptraits.traits1}</p>\r\n                <p hidden>#</p>\r\n                <p>{npc.ptraits.traits2}</p>\r\n                {\r\n                  quirksArray.map(value => <p key={value}>{value}.</p>)\r\n                }\r\n                <p hidden>#</p>\r\n                <p hidden>#</p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={12} md={6} lg={4}>\r\n            <Panel className=\"second-row-height\">\r\n              <Panel.Heading>Ability Scores</Panel.Heading>\r\n              <Panel.Body>\r\n                <p hidden>#</p>\r\n                <Row>\r\n                  <Col\r\n                    lg={12}\r\n                    md={2}\r\n                    xs={12}\r\n                    className=\"no-right-pad no-left-pad ability\"\r\n                  >\r\n                    <table className=\"ability-table\">\r\n                      <tbody>\r\n                        {\r\n                          abilities.map(({ key, name }) => {\r\n                            const ability = npc.abilities[key];\r\n                            return (\r\n                              <tr key={key}><td><b>{name}</b><p hidden> - </p></td><td className=\"ability-number\">{Math.max(3, ability)}<p hidden>#</p></td></tr>\r\n                            );\r\n                          })\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </Col>\r\n                </Row>\r\n                <p hidden>#</p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n          <Col sm={12} md={6} lg={4}>\r\n            <Panel className=\"second-row-height\">\r\n              <Panel.Heading>Relationships</Panel.Heading>\r\n              <Panel.Body>\r\n                <p hidden>#</p>\r\n                <p><b>Sexual Orientation </b></p><p hidden>- </p><p>{npc.relationship.orientation}</p>\r\n                <p hidden>#</p>\r\n                <p><b>Relationship Status </b></p><p hidden>- </p><p>{npc.relationship.status}</p>\r\n                <p hidden>#</p>\r\n                <p hidden>#</p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n          <Col sm={12} md={12} lg={4}>\r\n            <Panel className=\"second-row-height\">\r\n              <Panel.Heading>Alignment Tendencies</Panel.Heading>\r\n              <Panel.Body>\r\n                <p hidden>#</p>\r\n                <table className=\"alignment-table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"width-thin\"><b>Good</b></td><td hidden>:    </td><td className=\"alignment-number\">{Math.max(0, npc.alignment.good)}</td>\r\n                      <td hidden>  </td>\r\n                      <td className=\"width-thin\"><b>Lawful</b></td><td hidden>:  </td><td className=\"alignment-number\">{Math.max(0, npc.alignment.lawful)}</td>\r\n                    </tr>\r\n                    <tr hidden><td>#</td></tr>\r\n                    <tr>\r\n                      <td className=\"width-thin\"><b>Neutral</b></td><td hidden>: </td><td className=\"alignment-number\">{Math.max(0, npc.alignment.moralneutral)}</td>\r\n                      <td hidden>  </td>\r\n                      <td className=\"width-thin\"><b>Neutral</b></td><td hidden>: </td><td className=\"alignment-number\">{Math.max(0, npc.alignment.ethicalneutral)}</td>\r\n                    </tr>\r\n                    <tr hidden><td>#</td></tr>\r\n                    <tr>\r\n                      <td className=\"width-thin\"><b>Evil</b></td><td hidden>:    </td><td className=\"alignment-number\">{Math.max(0, npc.alignment.evil)}</td>\r\n                      <td hidden>  </td>\r\n                      <td className=\"width-thin\"><b>Chaotic</b></td><td hidden>: </td><td className=\"alignment-number\">{Math.max(0, npc.alignment.chaotic)}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n        <p hidden>#</p>\r\n        <p hidden>#</p>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Panel className=\"align-center\">\r\n              <Panel.Heading>Plot Hook</Panel.Heading>\r\n              <Panel.Body>\r\n                <p hidden>#</p>\r\n                {npc.hook.description}\r\n                <p hidden>#</p>\r\n                <p hidden>#</p>\r\n              </Panel.Body>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport {\r\n  DebugNode,\r\n  Group,\r\n  NpcGenerateOptions,\r\n  SchemaDescriptor,\r\n  SchemaElement,\r\n  SchemaResult,\r\n  WeightedValue,\r\n  Npc,\r\n} from \"./index.js\";\r\nimport schema from \"./schema.json\";\r\nimport { getGroups, chooseRandomWithWeight, debugGen } from \"./utils\";\r\n\r\nfunction numberOrNull(v: any) {\r\n  return typeof v === \"number\" ? v | 0 : null;\r\n}\r\n\r\nexport function generate({\r\n  race,\r\n  subrace,\r\n  classorprof,\r\n  occupation1,\r\n  occupation2,\r\n  alignment,\r\n  plothook,\r\n  gender,\r\n}: NpcGenerateOptions = {}) {\r\n  const options = {\r\n    race: numberOrNull(race),\r\n    subrace: numberOrNull(subrace),\r\n    classorprof: numberOrNull(classorprof),\r\n    occupation1: numberOrNull(occupation1),\r\n    occupation2: numberOrNull(occupation2),\r\n    alignment: numberOrNull(alignment),\r\n    plothook: numberOrNull(plothook),\r\n    gender: numberOrNull(gender),\r\n  };\r\n\r\n  const context = { vars: {} };\r\n  let debugNode: DebugNode = { o: \"root\", childs: [] };\r\n  function processGroups(groups: Group[]) {\r\n    let result = \"\";\r\n    for (const instruction of groups) {\r\n      if (typeof instruction === \"string\") {\r\n        debugNode.childs.push(instruction);\r\n        result += String(instruction);\r\n      } else {\r\n        const oldNode = debugNode;\r\n        if (debugGen) {\r\n          const node = { o: instruction.original, childs: [] };\r\n          debugNode.childs.push(node);\r\n          debugNode = node;\r\n        }\r\n        if (typeof instruction === \"function\") {\r\n          const insRes = instruction(context, options);\r\n          if (insRes !== undefined) {\r\n            if (Array.isArray(insRes)) {\r\n              result += String(processGroups(insRes));\r\n            } else {\r\n              result += String(insRes);\r\n            }\r\n          }\r\n        }\r\n        else if (Array.isArray(instruction)) {\r\n          result += String(processGroups(instruction));\r\n        }\r\n        debugNode = oldNode;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function chooseFromArray(arr: WeightedValue[]): string {\r\n    const totalWeight = arr.reduce(function (w, e) {\r\n      return w + (e.w | 0);\r\n    }, 0);\r\n    return chooseRandomWithWeight(arr, totalWeight);\r\n  }\r\n\r\n  function processSchema(schemaElement: SchemaDescriptor): SchemaResult;\r\n  function processSchema(schemaElement: any): string;\r\n  function processSchema(schemaElement: SchemaElement | SchemaDescriptor): SchemaResult | string {\r\n    if (typeof schemaElement === \"string\") {\r\n      return processGroups(getGroups(schemaElement));\r\n    } else if (Array.isArray(schemaElement)) {\r\n      return processSchema(chooseFromArray(schemaElement));\r\n    }\r\n    const result: SchemaResult = {};\r\n    for (const name of Object.keys(schemaElement)) {\r\n      const element = schemaElement[name];\r\n      // need to make a choice based on weight\r\n      result[name] = processSchema(element);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // treat options\r\n  if (schema.options) {\r\n    // process inititalisation first, most of the selection is done here\r\n    processGroups(getGroups(schema.options.initialisation));\r\n  }\r\n\r\n  // Force to Npc type because we know schema.output matches the Npc type\r\n  const npc: Npc = processSchema(schema.output) as any;\r\n  return { npc, debugNode };\r\n}\r\n\r\nexport function printDebugGen(debugNode: DebugNode) {\r\n  if (debugNode) {\r\n    let depth = 0;\r\n    const lines: string[] = [];\r\n    const indent = () => \" \".repeat(depth);\r\n    const processNode = (node: DebugNode | string) => {\r\n      if (typeof node === \"string\") {\r\n        lines.push(indent() + `-> ${node}`);\r\n      } else {\r\n        lines.push(indent() + `-> ${node.o}`);\r\n        depth++;\r\n        for (const child of node.childs) {\r\n          processNode(child);\r\n        }\r\n        depth--;\r\n      }\r\n    }\r\n    processNode(debugNode);\r\n    console.log(lines.join(\"\\n\"))\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport UserInput from \"./UserInput\";\r\nimport NpcData from \"./NpcData\";\r\nimport { generate, printDebugGen } from \"./npcData/generate\";\r\nimport { NpcGenerateOptions, Npc } from './npcData/index';\r\n\r\nimport \"./DisplayNpc.less\"\r\n\r\ninterface IState {\r\n  npc: Npc\r\n}\r\n\r\nexport default class DisplayNpc extends Component<{}, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    // Generate initial npc\r\n    const { npc, debugNode } = generate({});\r\n    printDebugGen(debugNode);\r\n    this.state = { npc };\r\n    this.generateNpc = this.generateNpc.bind(this);\r\n  }\r\n\r\n  generateNpc(options: NpcGenerateOptions) {\r\n    const { npc, debugNode } = generate(options);\r\n    printDebugGen(debugNode);\r\n    this.setState({ npc });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col\r\n            xs={12}\r\n            xsOffset={0}\r\n            sm={4}\r\n            smOffset={0}\r\n            md={3}\r\n            mdOffset={0}\r\n            className=\"user-info-col top-padding options-panel\"\r\n          >\r\n            <div>\r\n              <div className=\"title-image\"></div>\r\n            </div>\r\n            <UserInput npc={this.state.npc} generate={this.generateNpc} />\r\n          </Col>\r\n          <Col\r\n            xs={12}\r\n            xsOffset={0}\r\n            sm={7}\r\n            smOffset={0}\r\n            md={9}\r\n            mdOffset={0}\r\n            className=\"top-padding\"\r\n          >\r\n            <NpcData npc={this.state.npc} />\r\n            <Footer />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Grid } from \"react-bootstrap\";\r\nimport DisplayNpc from \"./DisplayNpc\";\r\n\r\nimport \"./styles/index.less\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <DisplayNpc />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}